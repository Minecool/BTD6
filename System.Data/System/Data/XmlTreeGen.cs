namespace System.Data;

internal sealed class XmlTreeGen
{
	private ArrayList _constraintNames; //Field offset: 0x10
	private Hashtable _namespaces; //Field offset: 0x18
	private Hashtable _autogenerated; //Field offset: 0x20
	private Hashtable _prefixes; //Field offset: 0x28
	private DataSet _ds; //Field offset: 0x30
	private ArrayList _tables; //Field offset: 0x38
	private ArrayList _relations; //Field offset: 0x40
	private XmlDocument _dc; //Field offset: 0x48
	private XmlElement _sRoot; //Field offset: 0x50
	private int _prefixCount; //Field offset: 0x58
	private SchemaFormat _schFormat; //Field offset: 0x5C
	private string _filePath; //Field offset: 0x60
	private string _fileName; //Field offset: 0x68
	private string _fileExt; //Field offset: 0x70
	private XmlElement _dsElement; //Field offset: 0x78
	private XmlElement _constraintSeparator; //Field offset: 0x80
	private Converter<Type, String> _targetConverter; //Field offset: 0x88

	private static bool _PropsNotEmpty(PropertyCollection props) { }

	internal XmlTreeGen(SchemaFormat format) { }

	internal void AddColumnProperties(DataColumn col, XmlElement root) { }

	internal static void AddExtendedProperties(PropertyCollection props, XmlElement node) { }

	internal static void AddExtendedProperties(PropertyCollection props, XmlElement node, Type type) { }

	internal void AddXdoProperties(object instance, XmlElement root, XmlDocument xd) { }

	internal void AddXdoProperty(PropertyDescriptor pd, object instance, XmlElement root, XmlDocument xd) { }

	internal void AppendChildWithoutRef(XmlElement node, string Namespace, XmlElement el, string refString) { }

	internal static bool AutoGenerated(DataRelation rel) { }

	internal static bool AutoGenerated(UniqueConstraint unique) { }

	private bool AutoGenerated(ForeignKeyConstraint fk) { }

	internal static bool AutoGenerated(DataColumn col) { }

	internal static bool AutoGenerated(ForeignKeyConstraint fk, bool checkRelation) { }

	private void CreateRelations(DataTable dt) { }

	private void CreateTablesHierarchy(DataTable dt) { }

	private DataTable[] CreateToplevelTables() { }

	internal XmlElement FillDataSetElement(XmlDocument xd, DataSet ds, DataTable dt) { }

	private static XmlElement FindSimpleType(XmlElement schema, string name) { }

	private string FindTargetNamespace(DataTable table) { }

	internal XmlElement FindTypeNode(XmlElement node, string strType) { }

	private void GenerateConstraintNames(DataSet ds) { }

	private void GenerateConstraintNames(ArrayList tables) { }

	private void GenerateConstraintNames(DataTable table, bool fromTable) { }

	internal XmlElement GetSchema(string NamespaceURI) { }

	internal XmlElement HandleColumn(DataColumn col, XmlDocument dc, XmlElement schema, bool fWriteOrdinal) { }

	internal void HandleColumnType(DataColumn col, XmlDocument dc, XmlElement root, XmlElement schema) { }

	internal XmlElement HandleRelation(DataRelation rel, XmlDocument dc) { }

	internal XmlElement HandleTable(DataTable table, XmlDocument dc, XmlElement schema) { }

	internal XmlElement HandleTable(DataTable table, XmlDocument dc, XmlElement schema, bool genNested) { }

	private bool HasMixedColumns(DataTable table) { }

	private bool HaveExtendedProperties(DataSet ds) { }

	private bool IsAutoGenerated(object o) { }

	internal void Save(DataTable dt, XmlWriter xw) { }

	internal void Save(DataSet ds, DataTable dt, XmlWriter xw, bool writeHierarchy) { }

	internal void Save(DataSet ds, DataTable dt, XmlWriter xw) { }

	internal void Save(DataSet ds, XmlWriter xw) { }

	internal void Save(DataSet ds, DataTable dt, XmlWriter xw, bool writeHierarchy, Converter<Type, String> multipleTargetConverter) { }

	internal XmlElement SchemaTree(XmlDocument xd, DataTable dt) { }

	internal void SchemaTree(XmlDocument xd, XmlWriter xmlWriter, DataSet ds, DataTable dt, bool writeHierarchy) { }

	private void SetMSDataAttribute(XmlElement root, Type type) { }

	internal void SetPath(XmlWriter xw) { }

	internal void SetupAutoGenerated(DataTable dt) { }

	internal void SetupAutoGenerated(ArrayList dt) { }

	internal void SetupAutoGenerated(DataSet ds) { }

	internal static string TranslateAcceptRejectRule(AcceptRejectRule rule) { }

	internal static string TranslateRule(Rule rule) { }

	internal static void ValidateColumnMapping(Type columnType) { }

	internal void WriteSchemaRoot(XmlDocument xd, XmlElement rootSchema, string targetNamespace) { }

	internal static string XmlDataTypeName(Type type) { }

}

